<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>CodeDocumentationAndComments</name>
  </assembly>
  <members>
    <member name="T:Telerik.ILS.Common.StringExtensions">
      <summary>
            Extension methods for the <see cref="T:System.String" /> class.
            </summary>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToMd5Hash(System.String)">
      <summary>
            Calculates MD5 hash for a given string
            </summary>
      <param name="input">The string whose MD5 value will be computed</param>
      <returns>128-bit (16-byte) hash value of the given string</returns>
      <example>
            This sample shows how to call the <see cref="!:ToMD5Hash" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Pesho"; 
                    Console.WriteLine(exampleString.ToMD5Hash());
                }
            }
            </code></example>
      <seealso cref="!:http://en.wikipedia.org/wiki/Md5" />
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToBoolean(System.String)">
      <summary>
            Checks if given a string can be interpreted as <see cref="T:System.Boolean" />
            'true' value.
            </summary>
      <param name="input">The string to check.</param>
      <returns>True if the given string can be interpreted <see cref="T:System.Boolean" /> 'true'.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToBoolean(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "ok"; 
                    Console.WriteLine(exampleString.ToBoolean());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToShort(System.String)">
      <summary>
            Converts a given string to <see cref="T:System.Int16" />.
            </summary>
      <param name="input">The given string to convert.</param>
      <returns>The string value if the string can be converted to <see cref="T:System.Int16" /> else returns 0.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToShort(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "42"; 
                    Console.WriteLine(exampleString.ToShort()); // This will return 42.
                    
                    exampleString = "Pesho"; 
                    Console.WriteLine(exampleString.ToShort()); // This will return 0.
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToInteger(System.String)">
      <summary>
            Converts a given string to <see cref="T:System.Int32" />.
            </summary>
      <param name="input">The given string to convert.</param>
      <returns>The string value if the string can be converted to <see cref="T:System.Int32" /> else returns 0.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToInteger(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "42"; 
                    Console.WriteLine(exampleString.ToInteger()); // This will return 42.
                    
                    exampleString = "Pesho"; 
                    Console.WriteLine(exampleString.ToInteger()); // This will return 0.
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToLong(System.String)">
      <summary>
            Converts a given string to <see cref="T:System.Int64" />.
            </summary>
      <param name="input">The given string to convert.</param>
      <returns>The string value if the string can be converted to <see cref="T:System.Int64" /> else returns 0.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToLong(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "42"; 
                    Console.WriteLine(exampleString.ToLong()); // This will return 42.
                    
                    exampleString = "Pesho"; 
                    Console.WriteLine(exampleString.ToLong()); // This will return 0.
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToDateTime(System.String)">
      <summary>
            Converts a given string to <see cref="T:System.DateTime" />.
            </summary>
      <param name="input">The given string to convert.</param>
      <returns>The string value if the string can be converted to <see cref="T:System.DateTime" /> else 01.01.0001 г. 00:00:00 ч.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToDateTime(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = ""2012/12/30 13:37:00""; 
                    Console.WriteLine(exampleString.ToDateTime()); // This will return 30.12.2012 г. 13:37:00 ч.
                    
                    exampleString = "Pesho"; 
                    Console.WriteLine(exampleString.ToDateTime()); // This will return  01.01.0001 г. 00:00:00 ч.
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.CapitalizeFirstLetter(System.String)">
      <summary>
            Returns a copy of this string with its first letter converted to uppercase.
            </summary>
      <param name="input">This string, whose first letter will be capitalized.</param>
      <returns>Copy of the given string starting with capital letter.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.CapitalizeFirstLetter(System.String)" /> method.
            <code>
            using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string stringExample = "pesho";
                    Console.WriteLine(stringExample.CapitalizeFirstLetter());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.GetStringBetween(System.String,System.String,System.String,System.Int32)">
      <summary>
            Returns a substring between <paramref name="startString" /> and <paramref name="endString" />. 
            The search beggins from <paramref name="startFrom" /> index.
            </summary>
      <param name="input">The string to be searche in it.</param>
      <param name="startString">The left boundry of the result string.</param>
      <param name="endString">The right boundry of the result string.</param>
      <param name="startFrom">The start position for the searching.</param>
      <returns>A subsstring between <paramref name="startString" /> and <paramref name="endString" /> 
            searching from <paramref name="startFrom" />, if given such or starts from the beggining, 
            or <see cref="F:System.String.Empty" /> if <paramref name="startString" /> or 
            <paramref name="endString" /> are not found in the given string</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.GetStringBetween(System.String,System.String,System.String,System.Int32)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Pesho qde banica s praz.";
                    Console.WriteLine(exampleString.GetStringBetween("banica", "praz"));
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ConvertCyrillicToLatinLetters(System.String)">
      <summary>
            Returns a string with all letters converted from Cyrillic letters to their Latin corresponding.
            </summary>
      <param name="input">The string to be converted</param>
      <returns>String with all letter converted to Latin letters.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ConvertCyrillicToLatinLetters(System.String)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Ял Пешо баница с праз...";
                    Console.WriteLine(exampleString.ConvertCyrillicToLatinLetters());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ConvertLatinToCyrillicKeyboard(System.String)">
      <summary>
            Returns a string with all letters converted from Latin letters to their their Cyrillic corresponding.
            </summary>
      <param name="input">The string to be converted</param>
      <returns>String with all letter converted to Cyrillic letters.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ConvertLatinToCyrillicKeyboard(System.String)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Pesho yade banitza s praz luk!";
                    Console.WriteLine(exampleString.ConvertCyrillicToLatinLetters());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToValidUsername(System.String)">
      <summary>
            Returns a valid user name in Latin letters using <see cref="M:Telerik.ILS.Common.StringExtensions.ConvertCyrillicToLatinLetters(System.String)" />
            and removes invalid characters.
            All non numeric characters except "." and "_" are invalid and are removed.
            </summary>
      <param name="input">String containging the user name to be validated.</param>
      <returns>String representing valid user name.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToValidUsername(System.String)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Пешо.Стаматов";
                    Console.WriteLine(exampleString.ToValidUsername());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToValidLatinFileName(System.String)">
      <summary>
            Returns a valid file name in Latin letters using <see cref="M:Telerik.ILS.Common.StringExtensions.ConvertCyrillicToLatinLetters(System.String)" /> 
            and removes invalid characters.
            All non numeric characters except ".", "-" and "_" are invalid and are removed.
            </summary>
      <param name="input">String containging the file name to be validated.</param>
      <returns>String representing valid file name.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToValidLatinFileName(System.String)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "снимка-планина-021";
                    Console.WriteLine(exampleString.ToValidLatinFileName());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.GetFirstCharacters(System.String,System.Int32)">
      <summary>
            Get the first characters 'n' determined by <paramref name="charsCount" /> of a given string.
            </summary>
      <param name="input">String whos first charactes will be returned.</param>
      <param name="charsCount">Count of the returning character.</param>
      <returns>The first 'n' characters if <paramref name="charsCount" /> 
            is lesser then the <paramref name="input" /> else the whole string.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.GetFirstCharacters(System.String,System.Int32)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "Pesho";
                    Console.WriteLine(exampleString.GetFirstCharacters(5));
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.GetFileExtension(System.String)">
      <summary>
            Get the file extension of file in a string format
            </summary>
      <param name="fileName">The given file name with extension.</param>
      <returns>
            Substring of the given file name representing file extension if such exists 
            or file name isn't empty string, else returns <see cref="F:System.String.Empty" /></returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.GetFileExtension(System.String)" /> method.
            <code>
            Using System;
            using Telerik.ILS.Common;
            
            class Example
            {
                static void Main()
                {
                    string exampleString = "MyMovie.avi";
                    Console.WriteLine(exampleString.GetFileExtension());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToContentType(System.String)">
      <summary>
            Returns the corresponding content type for the given file extension.
            </summary>
      <param name="fileExtension">The file extension excluding "." symbol.</param>
      <returns>The content type as a string.</returns>
      <example>
            This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToContentType(System.String)" /> method.
            <code>
            class Example
            {
                static void Main()
                {
                    string exampleString = "jpg";
                    Console.WriteLine(exampleString.ToContentType());
                }
            }
            </code></example>
    </member>
    <member name="M:Telerik.ILS.Common.StringExtensions.ToByteArray(System.String)">
      <summary>
             Converts a set of characters from the specified character array into a sequence of bytes.
             </summary>
      <param name="input">The given string.</param>
      <returns>A byte array containing the specified set of characters.</returns>
      <example>
             This sample shows how to call the <see cref="M:Telerik.ILS.Common.StringExtensions.ToByteArray(System.String)" /> method.
             <code>
             using System;
             using Telerik.ILS.Common;
            
             class Example
             {
                public static void Main()
                {
                     string exampleString = "This is some test string";
                     var exampleByteArray = value.ToByteArray();
                     foreach (var element in exampleByteArray)
                     {
                         Console.Write(element);
                     }
                 }
             }
            
             </code></example>
    </member>
    <member name="N:Telerik.ILS.Common">
      <summary />
    </member>
  </members>
</doc>